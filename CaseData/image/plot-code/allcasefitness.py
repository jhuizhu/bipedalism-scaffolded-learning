import matplotlib.pyplot as plt
import math
import seaborn as sns
import numpy as np

def getxdata():    
    condx1 = [0,
0.1,
4,
7,
9,
10,
16,
57,
63,
66,
70,
75,
161,
179,
185,
235,
270,
290,
451,
511,
571,
593,
612,
616,
634,
641,
656,
666,
717,
719,
721,
799,
877,
916,
970,
976,
1028,
1031,
1296,
1810,
1949,
2249,
2345,
2347,
2571,
2660,
3246,
3311,
3438,
3901,
4000
]   

    condx2 = [0,
1,
4,
5,
10,
15,
23,
29,
39,
88,
128,
151,
255,
324,
365,
425,
437,
438,
479,
490,
514,
537,
557,
635,
719,
721,
724,
726,
748,
750,
761,
773,
775,
808,
825,
937,
976,
989,
1009,
1051,
1052,
1165,
1362,
1368,
1587,
1900,
4000
]   

    condx3 = [0,
0.1,
1,
4,
13,
15,
28,
37,
50,
57,
89,
92,
95,
123,
131,
139,
155,
204,
211,
232,
245,
248,
258,
286,
293,
330,
353,
445,
472,
563,
570,
618,
815,
822,
925,
1002,
1008,
1103,
1126,
1392,
1707,
1724,
1938,
1957,
1983,
2473,
2486,
2503,
2640,
2927,
2937,
3978,4000
]    

    return condx1, condx2, condx3


def getydata():       
    condy1 = [[4.8763,
4.8763,
4.8763,
4.8763,
6.87906,
6.87906,
6.87906,
6.92551,
6.92551,
6.92551,
6.92551,
8.38329,
8.38329,
8.38329,
8.38329,
8.65163,
8.65163,
8.78937,
8.78937,
9.81097,
9.81097,
10.7566,
11.2675,
11.2675,
11.2675,
11.2675,
11.5551,
12.8743,
12.8743,
12.8743,
12.8743,
12.8743,
12.8743,
12.8743,
12.8743,
13.7964,
13.9941,
15.5077,
15.5077,
15.5077,
15.5077,
15.5077,
15.5077,
15.5077,
15.5077,
15.6654,
15.6654,
16.0027,
16.0027,
17.2539,17.2539
],             
             [4.8763,
5.29617,
5.29617,
7.82615,
7.82615,
7.82615,
7.82615,
7.82615,
7.82615,
7.82615,
7.82615,
7.82615,
7.82615,
8.37303,
8.45178,
8.45178,
8.45178,
9.517,
9.517,
9.517,
9.517,
9.517,
9.517,
9.70861,
10.9065,
10.9065,
10.9065,
10.9065,
11.1968,
11.1968,
11.1968,
11.1968,
12.6307,
12.6307,
12.6307,
12.6307,
12.6307,
12.6307,
14.8376,
15.429,
15.4572,
15.8673,
16.1766,
16.1766,
16.1981,
16.1981,
18.472,
18.472,
18.472,
18.472,18.472
],             
             [4.8763,
4.8763,
4.88662,
4.88662,
5.08347,
5.27927,
5.81012,
5.81012,
5.8153,
5.81936,
6.83911,
6.83911,
7.14053,
7.14053,
7.14053,
7.14053,
8.29802,
8.29802,
8.42108,
8.42108,
9.58285,
9.58285,
9.58285,
9.58285,
9.58285,
10.0945,
10.0945,
10.0945,
10.0945,
10.2861,
11.5132,
13.1865,
13.1865,
16.3282,
17.4638,
17.4638,
17.4638,
17.4638,
17.4638,
17.4638,
17.4638,
17.4638,
17.4638,
17.5451,
17.5451,
17.5451,
17.5451,
17.5451,
18.8213,
18.8213,18.8213
]]   

    condy2 = [[4.8763,
4.8763,
4.8763,
5.77006,
5.77006,
6.21072,
6.66605,
6.66605,
7.53069,
7.53069,
7.53069,
7.53069,
7.53069,
7.82562,
7.82562,
7.82562,
8.33727,
9.00041,
9.54253,
9.54731,
10.2308,
10.693,
11.6832,
11.6832,
11.6832,
11.6832,
11.7581,
11.7581,
12.4176,
12.4176,
13.2286,
13.2286,
13.2286,
13.2286,
16.6463,
16.6463,
16.6463,
16.6463,
16.6463,
16.6463,
16.6463,
16.6463,
16.7637,
16.7637,
16.7637,
16.7637,16.7637
],            
             [4.8763,
4.8763,
5.57342,
5.57342,
5.57342,
5.57342,
5.57342,
6.60978,
6.60978,
6.74647,
6.83384,
6.83384,
7.29106,
7.29106,
7.32023,
9.06482,
9.06482,
9.06482,
9.06482,
9.06482,
9.06482,
9.06482,
9.06482,
9.08488,
9.24906,
9.33876,
9.33876,
9.44255,
9.44255,
9.46586,
9.46586,
9.66712,
9.66712,
10.1469,
10.1469,
10.2295,
11.1141,
11.1141,
11.3236,
11.7977,
12.2056,
14.2446,
14.2446,
14.2446,
14.9504,
15.1812,15.1812
],            
             [4.8763,
5.27959,
5.27959,
5.27959,
5.75715,
5.75715,
5.75715,
6.74652,
6.74652,
6.74652,
6.74652,
8.64859,
8.64859,
8.64859,
8.64859,
8.64859,
8.64859,
8.64859,
8.64859,
8.64859,
8.64859,
8.64859,
8.64859,
8.64859,
8.64859,
8.64859,
8.64859,
8.64859,
8.64859,
8.64859,
8.64859,
8.64859,
8.83195,
8.83195,
8.83195,
8.83195,
8.83195,
8.98825,
8.98825,
8.98825,
8.98825,
8.98825,
8.98825,
9.29019,
9.29019,
9.29019,9.29019
]]   

    condy3 = [[4.8763,
5.01501,
5.01501,
5.01501,
5.01501,
5.88005,
5.89958,
5.89958,
6.47717,
6.47717,
6.71281,
6.71281,
6.71281,
6.9765,
8.08774,
8.08774,
8.08774,
8.11843,
8.11843,
8.11843,
8.48579,
8.48579,
8.48579,
8.48579,
9.89004,
9.89004,
10.4343,
12.7003,
12.7003,
12.7003,
12.7003,
12.7003,
14.7846,
14.7846,
14.7846,
14.7846,
14.7846,
15.9868,
15.9868,
15.9868,
15.9868,
16.4722,
16.4722,
16.4722,
16.4722,
16.4722,
16.4722,
16.5474,
18.2555,
18.2555,
18.2555,
20.4203,20.4203
],           
             [4.8763,
4.8763,
5.84892,
5.84892,
5.84892,
5.84892,
5.84892,
5.97081,
5.97081,
6.9862,
6.9862,
7.30008,
7.30008,
7.30008,
7.30008,
7.30008,
8.34287,
8.34287,
8.7051,
10.8064,
10.8064,
11.1514,
11.1514,
11.1514,
11.1514,
13.0374,
13.0374,
13.0374,
13.3845,
14.4339,
14.4339,
14.4339,
14.4339,
14.4339,
14.8933,
14.8933,
16.3446,
16.3446,
16.3446,
16.3446,
16.3446,
16.3446,
16.3446,
16.3446,
16.6098,
18.8591,
18.8591,
18.8591,
18.8591,
18.8591,
19.213,
19.213,19.213
],            
             [4.8763,
4.8763,
4.8763,
5.01725,
5.58684,
6.36797,
6.36797,
6.36797,
6.36797,
6.36797,
6.36797,
6.36797,
6.52204,
6.52204,
6.52204,
7.53612,
7.53612,
7.53612,
7.53612,
7.53612,
7.53612,
7.53612,
7.9235,
10.1518,
10.1518,
10.1518,
10.1518,
10.1518,
10.1518,
10.1518,
10.3898,
12.2591,
12.2591,
13.1625,
13.1625,
13.7735,
13.7735,
13.7735,
14.3382,
15.1305,
17.3344,
17.3344,
17.5004,
17.6913,
17.6913,
17.6913,
18.3064,
18.3064,
18.3064,
21.1338,
21.1338,
21.1338,21.1338
]]    

    return condy1, condy2, condy3

data = getydata()
fig = plt.figure(figsize=(6,4.5))
# fig = plt.figure(figsize=(12,5))

xdata = getxdata()
# print(xdata)
# print(data)

linestyle = ['--', ':', '-.']
# marker= ['s', '^', 'o']
a = 1.0
alpha = [a, a, a]
# color = ['firebrick', 'slateblue', 'k']
color = ['peru', 'slateblue', 'k']
label = ['Case 1', 'Case 2', 'Case 3']

sns.set(style="darkgrid", font_scale=1)
for i in range(3):    
    sns.tsplot(time=xdata[i], data=data[i], color=color[i], linestyle=linestyle[i],alpha=alpha[i],condition=label[i])
    # print(xdata[i])
    # print(data[i])

plt.xlim((0, 4001))    
plt.ylim((4, 22))    
my_x_ticks = np.arange(0, 4001, 500)
my_y_ticks = np.arange(4, 22.1, 2)
plt.xticks(my_x_ticks)
plt.yticks(my_y_ticks)
#plt.rc('text', usetex=True)
plt.rc('font', family='serif', size=17)
plt.xlabel('Generations (-)')
plt.ylabel('Fitness (-)')
# plt.title('Max fitness against generation for two legs')
# plt.savefig('/home/lima/Desktop/Case/image/allcasefitness.pdf', bbox_inches='tight')
plt.show()